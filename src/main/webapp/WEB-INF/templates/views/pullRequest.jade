-@ val checklist: prchecklist.models.ReleaseChecklist
-@ val visitor: Option[prchecklist.models.Visitor]

.row(class={if (checklist.allGreen) "all-green" else ""})
  .col-md-9

    h1.headline
      i.fa.fa-check-circle.checklist-check-mark
      div
        small
          a(href="/#{checklist.repo.fullName}") #{checklist.repo.fullName}
        a(href={checklist.pullRequestUrl(checklist.pullRequest.number)})
          | ##{checklist.pullRequest.number.toString}
        | #{checklist.pullRequest.title}

    .description
      != formatMarkdown(checklist.pullRequest.body)

    ul#checklist
      = checklist.checks.map
        - case (nr, check) =>
          li(class={if (check.isChecked) "checked" else ""})
            a.number(href={checklist.pullRequestUrl(nr)}) ##{nr.toString}
            span.title
              | #{check.pullRequest.title}
            .checkers-container
              span.checkers
                = check.checkedUsers.map
                  - user =>
                    img(src={user.avatarUrl} width=32)
              - if (visitor.exists(check.isCheckedBy(_)))
                form(method="post" action="/#{checklist.repo.fullName}/pull/#{checklist.pullRequest.number.toString}/-/uncheck/#{check.pullRequest.number.toString}")
                  button.btn.btn-sm.btn-success(type="submit")
                    i.fa.fa-check
                    i.fa.fa-times
              - else
                form(method="post" action="/#{checklist.repo.fullName}/pull/#{checklist.pullRequest.number.toString}/-/check/#{check.pullRequest.number.toString}")
                  button.btn.btn-sm.btn-default(type="submit")
                    i.fa.fa-check
